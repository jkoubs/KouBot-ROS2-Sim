<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from koubot_base.xacro              | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="koubot">
  <!-- BASE FOOTPRINT -->
  <link name="base_footprint">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.0001 0.0001 0.0001"/>
      </geometry>
    </visual>
  </link>
  <joint name="base_footprint_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0.081"/>
    <parent link="base_footprint"/>
    <child link="base_link"/>
  </joint>
  <!-- BASE LINK -->
  <link name="base_link">
    <inertial>
      <mass value="5.0"/>
      <origin xyz="0 0 0.0"/>
      <inertia ixx="0.015052083333333336" ixy="0" ixz="0" iyy="0.02170833333333334" iyz="0" izz="0.026677083333333337"/>
    </inertial>
    <collision>
      <origin rpy="0 0 1.570796327" xyz="0 0 0"/>
      <geometry>
        <box size="0.155 0.2 0.11"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="-1.570796327 0 0" xyz="0 0 -0.055"/>
      <geometry>
        <mesh filename="package://robot_description/meshes/chassis.dae"/>
      </geometry>
    </visual>
  </link>
  <!-- Joint - base_link / front left wheel -->
  <joint name="joint_base_link_front_left_wheel" type="continuous">
    <origin rpy="0 0 0" xyz="0.05 0.114 -0.04"/>
    <child link="front_left_wheel"/>
    <parent link="base_link"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <limit effort="10000" velocity="1000"/>
    <joint_properties damping="1.0" friction="1.0"/>
  </joint>
  <!-- FRONT LEFT WHEEL -->
  <link name="front_left_wheel">
    <inertial>
      <mass value="0.5"/>
      <origin rpy="1.570796327 0 0" xyz="0 0 0"/>
      <inertia ixx="0.00025399999999999994" ixy="0" ixz="0" iyy="0.00025399999999999994" iyz="0" izz="0.0004"/>
    </inertial>
    <collision>
      <origin rpy="1.570796327 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.036" radius="0.04"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="3.141592654 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_description/meshes/wheels.dae"/>
      </geometry>
    </visual>
  </link>
  <!-- Joint - base_link / front right wheel -->
  <joint name="joint_base_link_front_right_wheel" type="continuous">
    <origin rpy="0 0 0" xyz="0.05 -0.114 -0.04"/>
    <child link="front_right_wheel"/>
    <parent link="base_link"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <limit effort="10000" velocity="1000"/>
    <joint_properties damping="1.0" friction="1.0"/>
  </joint>
  <!-- FRONT RIGHT WHEEL -->
  <link name="front_right_wheel">
    <inertial>
      <mass value="0.5"/>
      <origin rpy="1.570796327 0 0" xyz="0 0 0"/>
      <inertia ixx="0.00025399999999999994" ixy="0" ixz="0" iyy="0.00025399999999999994" iyz="0" izz="0.0004"/>
    </inertial>
    <collision>
      <origin rpy="1.570796327 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.036" radius="0.04"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="3.141592654 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_description/meshes/wheels.dae"/>
      </geometry>
    </visual>
  </link>
  <!-- Joint - base_link / back right wheel -->
  <joint name="joint_base_link_back_right_wheel" type="continuous">
    <origin rpy="0 0 0" xyz="-0.05 -0.114 -0.04"/>
    <child link="back_right_wheel"/>
    <parent link="base_link"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <limit effort="10000" velocity="1000"/>
    <joint_properties damping="1.0" friction="1.0"/>
  </joint>
  <!-- BACK RIGHT WHEEL -->
  <link name="back_right_wheel">
    <inertial>
      <mass value="0.5"/>
      <origin rpy="1.570796327 0 0" xyz="0 0 0"/>
      <inertia ixx="0.00025399999999999994" ixy="0" ixz="0" iyy="0.00025399999999999994" iyz="0" izz="0.0004"/>
    </inertial>
    <collision>
      <origin rpy="1.570796327 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.036" radius="0.04"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="3.141592654 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_description/meshes/wheels.dae"/>
      </geometry>
    </visual>
  </link>
  <!-- Joint - base_link / back left wheel -->
  <joint name="joint_base_link_back_left_wheel" type="continuous">
    <origin rpy="0 0 0" xyz="-0.05 0.114 -0.04"/>
    <child link="back_left_wheel"/>
    <parent link="base_link"/>
    <axis rpy="0 0 0" xyz="0 1 0"/>
    <limit effort="10000" velocity="1000"/>
    <joint_properties damping="1.0" friction="1.0"/>
  </joint>
  <!-- BACK LEFT WHEEL -->
  <link name="back_left_wheel">
    <inertial>
      <mass value="0.5"/>
      <origin rpy="1.570796327 0 0" xyz="0 0 0"/>
      <inertia ixx="0.00025399999999999994" ixy="0" ixz="0" iyy="0.00025399999999999994" iyz="0" izz="0.0004"/>
    </inertial>
    <collision>
      <origin rpy="1.570796327 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.036" radius="0.04"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="3.141592654 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://robot_description/meshes/wheels.dae"/>
      </geometry>
    </visual>
  </link>
  <!--###########################################################################-->
  <!-- LiDAR - RPA1-->
  <link name="lidar_link" type="laser">
    <inertial>
      <mass value="0.2"/>
      <origin rpy="0 0 0.0" xyz="0 0 0.0"/>
      <inertia ixx="0.0001029166666666667" ixy="0" ixz="0" iyy="0.0001029166666666667" iyz="0" izz="0.00012250000000000002"/>
    </inertial>
    <visual>
      <origin rpy="1.57 0 3.141592654" xyz="-0.015 -0.033 -0.06"/>
      <geometry>
        <mesh filename="package://robot_description/meshes/lidar.dae" scale="0.001 0.001 0.001"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="-0.037 0.0 -0.036"/>
      <geometry>
        <cylinder length="0.05" radius="0.035"/>
      </geometry>
    </collision>
  </link>
  <joint name="lidar_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.095 0 0.112"/>
    <parent link="base_link"/>
    <child link="lidar_link"/>
  </joint>
  <!--Laser sensor plugin-->
  <gazebo reference="lidar_link">
    <sensor name="head_hokuyo_sensor" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>20</update_rate>
      <always_on>true</always_on>
      <ray>
        <scan>
          <horizontal>
            <samples>1080</samples>
            <resolution>1.0</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.02</min>
          <max>10.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_ray_sensor.so" name="laser">
        <ros>
          <remapping>~/out:=scan</remapping>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
        <frame_name>lidar_link</frame_name>
      </plugin>
    </sensor>
  </gazebo>
  <!--###########################################################################-->
  <!-- Camera joint -->
  <joint name="camera_joint" type="fixed">
    <!-- Point cloud frustrum is 90 degrees off from visual frame -->
    <origin rpy=" 0 -0.39269908175 0" xyz="0.1 0 0.15"/>
    <parent link="base_link"/>
    <child link="camera_oakd_lite"/>
  </joint>
  <!-- Camera - Oak-D Lite -->
  <link name="camera_oakd_lite">
    <pose>0.0 0.0 0.0 0.0 0.0 0.0</pose>
    <inertial>
      <mass value="0.061"/>
      <origin rpy="0 0 0.0" xyz="0 0 0"/>
      <inertia ixx="5.542104166666667e-06" ixy="0" ixz="0" iyy="4.3651854166666664e-05" iyz="0" izz="4.6080416666666663e-05"/>
    </inertial>
    <visual>
      <origin rpy="1.570796327 0 -1.570796327" xyz="-0.01 0.04 -0.02"/>
      <geometry>
        <mesh filename="package://robot_description/meshes/OAK-D-LITE.dae" scale="0.001 0.001 0.001"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="1.570796327 0 -1.570796327" xyz="-0.01 0.0 -0.01"/>
      <geometry>
        <box size="0.091 0.028 0.0175"/>
      </geometry>
    </collision>
  </link>
  <joint name="camera_optical_joint" type="fixed">
    <parent link="camera_oakd_lite"/>
    <!-- <axis rpy="0 0 0" xyz="0 1 0" /> -->
    <child link="camera_link_optical"/>
    <origin rpy="0 0 0" xyz="0 0 0.0"/>
  </joint>
  <link name="camera_link_optical"/>
  \


    
  <!-- depth camera -->
  <joint name="camera_depth_optical_joint" type="fixed">
    <parent link="camera_oakd_lite"/>
    <!-- <axis rpy="0 0 0" xyz="0 1 0" /> -->
    <child link="camera_depth_link_optical"/>
    <origin rpy="1.570796327 3.141592654 1.570796327" xyz="0 0 0.0"/>
  </joint>
  <link name="camera_depth_link_optical"/>
  <!-- depth camera -->
  <gazebo reference="camera_oakd_lite">
    <!-- <material>Gazebo/Red</material> -->
    <!-- camera sensor -->
    <sensor name="camera" type="camera">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>10</update_rate>
      <camera>
        <horizontal_fov>1.089</horizontal_fov>
        <image>
          <format>R8G8B8</format>
          <width>640</width>
          <height>480</height>
        </image>
        <clip>
          <near>0.05</near>
          <far>8.0</far>
        </clip>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="depth_camera_controller">
        <frame_name>camera_link_optical</frame_name>
        <topicName>/camera/image_raw</topicName>
        <!-- <baseline>0.2</baseline>
                <alwaysOn>true</alwaysOn>
                <updateRate>0.0</updateRate>
                <pointCloudCutoff>0.2</pointCloudCutoff>
                <pointCloudCutoffMax>10.0</pointCloudCutoffMax>
                <distortionK1>0</distortionK1>
                <distortionK2>0</distortionK2>
                <distortionK3>0</distortionK3>
                <distortionT1>0</distortionT1>
                <distortionT2>0</distortionT2>
                <CxPrime>0</CxPrime>
                <Cx>0</Cx>
                <Cy>0</Cy>
                <focalLength>0</focalLength>
                <hackBaseline>0</hackBaseline>
                <ros>
                    <imageTopicName>/camera/color/image_raw</imageTopicName>
                    <cameraInfoTopicName>/camera/color/camera_info</cameraInfoTopicName>
                    <depthImageTopicName>/camera/depth/image_raw</depthImageTopicName>
                    <pointCloudTopicName>/camera/depth/points</pointCloudTopicName>
                </ros>  -->
      </plugin>
    </sensor>
    <!-- Point Cloud Sensor -->
    <sensor name="point_cloud_sensor" type="depth">
      <!-- Adjust the pose of the point cloud sensor relative to the camera link -->
      <pose>0 0 0 0 0 0</pose>
      <!-- Define parameters for the point cloud sensor -->
      <visualize>true</visualize>
      <update_rate>10</update_rate>
      <depth>
        <!-- Adjust depth sensor parameters as needed -->
        <horizontal_fov>1.089</horizontal_fov>
        <!-- <image>
                    <format>B8R8G8</format>
                    <width>640</width>
                    <height>480</height>
                </image> -->
        <!-- Specify clip planes if needed -->
        <clip>
          <near>0.05</near>
          <far>8.0</far>
        </clip>
      </depth>
      <!-- Plugin for handling point cloud data -->
      <plugin filename="libgazebo_ros_camera.so" name="point_cloud_controller">
        <!-- Specify the TF frame for the point cloud sensor -->
        <frame_name>camera_depth_link_optical</frame_name>
        <!-- Publish point cloud data to this topic -->
        <topicName>/point_cloud_sensor/points</topicName>
        <!-- Specify the encoding for the point cloud data -->
        <encoding>B8G8R8</encoding>
        <!-- Assuming your plugin supports BGR for point clouds -->
      </plugin>
    </sensor>
  </gazebo>
  <!--###########################################################################-->
  <!-- Add Gazebo Properties from file named koubot_base.gazebo -->
  <!--%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% FRICTION & STIFNESS %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-->
  <!--

    mu1: The static friction coefficient. 
    It is how much friction there is until the object starts moving in simple terms.

    mu2: The dynamic friction coefficient. 
    It is how much friction there is when the object moves in simple terms. 
    
    kp: This coefficient sets the static contact stiffness. 
    This determines whether the linked material is closer to marble (rigid, bigger values) 
    or more like rubber (soft material, lower values).

    kd: This coefficient sets the dynamic contact stiffness. 
    This determines whether the linked material is closer to marble (rigid, bigger values) 
    or more like rubber (soft material, lower values). 
    It is essentially how much it deforms over a long period, exerting its pressure.

    -->
  <!--%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%-->
  <gazebo reference="front_left_wheel">
    <!-- <kp>1000000000000000000000000000.0</kp>
        <kd>1000000000000000000000000000.0</kd> -->
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
  </gazebo>
  <gazebo reference="front_right_wheel">
    <!-- <kp>1000000000000000000000000000.0</kp>
        <kd>1000000000000000000000000000.0</kd> -->
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
  </gazebo>
  <gazebo reference="back_left_wheel">
    <!-- <kp>1000000000000000000000000000.0</kp>
        <kd>1000000000000000000000000000.0</kd> -->
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
  </gazebo>
  <gazebo reference="back_right_wheel">
    <!-- <kp>1000000000000000000000000000.0</kp>
        <kd>1000000000000000000000000000.0</kd> -->
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
  </gazebo>
  <!-- Gazebo Control - Omni-steering -->
  <gazebo>
    <plugin filename="libgazebo_ros_planar_move.so" name="omni_steering">
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <odometryRate>20.0</odometryRate>
      <robotBaseFrame>base_link</robotBaseFrame>
      <publishTF>true</publishTF>
      <!-- change to true ?? -->
    </plugin>
  </gazebo>
</robot>
